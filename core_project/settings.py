# core_project/settings.py
"""
Django settings for core_project project.

Generated by 'django-admin startproject' using Django 5.2.1.
(Nota: Tu requirements.txt ahora indica Django 5.0.14, lo cual está bien.
 Este comentario es del archivo original.)

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import sys
from django.urls import reverse_lazy
# import dj_database_url # Eliminado ya que no se usará para la configuración de SQL Server

# Cargar variables de entorno desde el archivo .env
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-!!0-8(40=d281g9_(m!9pa51jl$@=bi@r07m7ec7v7u_*bbk=_')

# SECURITY WARNING: don't run with debug turned on in production!
# El valor de DEBUG se establecerá dinámicamente más abajo
DEBUG = True # Valor por defecto para desarrollo si AZURE_DEPLOYMENT no está definido

ALLOWED_HOSTS = [] # Se define dinámicamente más abajo


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # Whitenoise recomienda estar después de staticfiles si no se usa runserver_nostatic
    'agendamiento.apps.AgendamientoConfig',
    # 'whitenoise.runserver_nostatic', # Decidimos omitir esto por ahora
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # MIDDLEWARE DE WHITENOISE AÑADIDO
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'agendamiento.middleware.SessionSecurityMiddleware',
    'agendamiento.middleware.SessionIntegrityMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [], # Si tienes plantillas a nivel de proyecto, añádelas aquí.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

if os.getenv('AZURE_DEPLOYMENT'):
    DB_HOST = os.getenv('DB_HOST')
    DB_NAME = os.getenv('DB_NAME')
    DB_USER = os.getenv('DB_USER')
    DB_PASSWORD = os.getenv('DB_PASSWORD')
    DB_PORT = os.getenv('DB_PORT', '1433') # Puerto por defecto de SQL Server

    DATABASES = {
        'default': {
            'ENGINE': 'mssql',  # Usando el backend mssql-django
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST,
            'PORT': DB_PORT,
            'OPTIONS': {
                'driver': 'ODBC Driver 17 for SQL Server', # O 'ODBC Driver 18 for SQL Server'
                                                          # Azure App Service Linux suele tener estos drivers.
                'encrypt': 'yes',                         # Requerido por Azure SQL Database
                'trust_server_certificate': 'no',
                'connection_timeout': '30',
            },
        }
    }
    if not all([DB_HOST, DB_NAME, DB_USER, DB_PASSWORD]):
        print("⚠️ ADVERTENCIA: Faltan una o más variables de entorno para la base de datos de Azure (DB_HOST, DB_NAME, DB_USER, DB_PASSWORD).")
else:
    # Configuración para desarrollo local con SQLite
    DEBUG = True # Reafirmamos DEBUG=True para desarrollo local si no está en Azure
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'agendamiento.validators.CustomMinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'agendamiento.validators.CustomCommonPasswordValidator',
    },
    {
        'NAME': 'agendamiento.validators.CustomNumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'es'
TIME_ZONE = 'America/Bogota'
USE_I18N = True
USE_TZ = True # USE_L10N fue eliminado y su funcionalidad está cubierta por USE_TZ e I18N


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = reverse_lazy('agendamiento:login')
LOGIN_REDIRECT_URL = '/'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Decidimos usar este para el MVP
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# ========== CONFIGURACIONES DE SEGURIDAD DE SESIONES ==========
SESSION_COOKIE_AGE = 3600
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_SECURE = False # Se sobrescribe a True para Azure
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_SAVE_EVERY_REQUEST = True # Evaluar impacto en rendimiento para producción

# Configuraciones adicionales de seguridad
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Test-specific configurations
if 'test' in sys.argv or os.environ.get('TESTING'):
    DEBUG = True 
    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]
    SESSION_EXPIRE_AT_BROWSER_CLOSE = False
    SESSION_COOKIE_AGE = 86400
    SESSION_SAVE_EVERY_REQUEST = False
    # DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'} # Opcional para tests más rápidos
    print("🧪 CONFIGURACIONES DE TESTING ACTIVADAS")

# ========== CONFIGURACIONES PARA AZURE ==========
if os.getenv('AZURE_DEPLOYMENT'):
    DEBUG = False
    
    # Asegúrate de que este es tu dominio real de Azure App Service
    ALLOWED_HOSTS = [
        'mvp-django-citas2efhxaeb7ba.eastus-01.azurewebsites.net', 
        '.azurewebsites.net',
        # os.getenv('WEBSITE_HOSTNAME') # Alternativa si Azure lo define
    ]
    
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    
    # EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # Ejemplo para producción si se configura
    # ... (otras configuraciones de email con os.getenv si fueran necesarias)

    print("🚀 CONFIGURACIONES DE AZURE ACTIVADAS")
else:
    if not ('test' in sys.argv or os.environ.get('TESTING')):
        ALLOWED_HOSTS = ['localhost', '127.0.0.1', '192.168.1.102'] # Ajusta tu IP local si es necesario
        print("💻 CONFIGURACIONES DE DESARROLLO LOCAL ACTIVADAS")